<main class="jot-page">
  <div class="nav-bar">
    <p id="saved-status" class="saved-status">saved</p>
    <p><a href="/home">home</a></p>
    <button id="delete-jot">delete</button>
  </div>

  <div id="jot-body" class="jot-body" contenteditable="true">
    <%= @jot[:body] %>
  </div>
</main>

<script type="text/javascript" charset="utf-8">
  const jotId = '<%= @jot[:id] %>'
  const inputDelayMilliseconds = 500

  document.addEventListener('DOMContentLoaded', () => {
    const jotBody = document.getElementById('jot-body')
    const savedStatus = document.getElementById('saved-status')
    let lastInputAt = Date.now()

    setCursorToEnd(jotBody)

    jotBody.addEventListener('input', () => {
      savedStatus.innerText = 'not saved'
      const currentInputAt = Date.now()
      if (currentInputAt > lastInputAt) lastInputAt = currentInputAt

      setTimeout(() => {
        if (lastInputAt > Date.now() - inputDelayMilliseconds) return

        savedStatus.innerText = 'saving...'
        const body = JSON.stringify({ title: jotBody.innerText.split('\n')[0], body: jotBody.innerHTML })
        fetch(`/api/jots/${jotId}`, { method: 'put', body })
          .then(() => savedStatus.innerText = 'saved')
      }, inputDelayMilliseconds)
    })

    document.getElementById('delete-jot').addEventListener('click', () => {
      if (!confirm(`Are you sure you want to delete this jot (id=${jotId})`)) return

      fetch(`/api/jots/${jotId}`, { method: 'delete' }).then(() => location.href = '/home')
    })
  })

  function setCursorToEnd(contentEditable) {
    const range = document.createRange()
    range.selectNodeContents(contentEditable)
    range.collapse(false)
    const selection = window.getSelection()
    selection.removeAllRanges()
    selection.addRange(range)
  }
</script>
